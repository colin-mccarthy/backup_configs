---


    - name: "create temporary directory to store configuration"
      run_once: true
      changed_when: false
      tempfile:
        state: directory
        suffix: ios_config
      register: r_tempfile


    - name: "git clone"
      run_once: true
      changed_when: false
      git:
     #  accept_hostkey: true
        repo: "{{ backup_repo }}"
        dest: "{{ r_tempfile.path }}"
        clone: yes


    - name: "git branch list"
      run_once: true
      changed_when: false
      register: git_branch_list
      shell: "git branch -a --list origin/{{ backup_branch | quote}}"
      args:
        chdir: "{{ r_tempfile.path }}"


    - name: "git checkout new branch"
      when: git_branch_list.stdout_lines|length < 1
      run_once: true
      register: git_checkout
      shell: "git checkout -B {{ backup_branch | quote }} origin/HEAD"
      args:
        chdir: "{{ r_tempfile.path }}"
      notify: git_sync


    - name: "git checkout existing branch"
      when: git_branch_list.stdout_lines|length > 0
      changed_when: false
      run_once: true
      register: git_checkout
      shell: "git checkout -B {{ backup_branch | quote }} origin/{{ backup_branch | quote }}"
      args:
        chdir: "{{ r_tempfile.path }}"


    - name: "fetch network configuration"
      ios_config:
        backup: yes
      register: r_ios_config


    - name: "remove non configuration lines"
      changed_when: false
      lineinfile:
        path: "{{ r_ios_config.backup_path }}"
        regexp: '^(Current|Building) configuration.*'
        state: absent


    - name: "create folder structure"
      file:
        path: "{{ r_tempfile.path }}/{{ inventory_hostname }}/config"
        state: directory


    - name: "copy network configuration to repo folder"
      copy:
        src: "{{ r_ios_config.backup_path }}"
        dest: "{{ r_tempfile.path }}/{{ inventory_hostname }}/config/running.cfg"
        force: "yes"
      notify: git_sync        
